<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Cascade Of Insights</title>
    <link href="/feed.xml" rel="self" />
    <link href="" />
    <id>/feed.xml</id>
    <author>
        <name>Adam Bell</name>
        <email>agbell at gmail.com</email>
    </author>
    <updated>2016-03-26T00:00:00Z</updated>
    <entry>
    <title>Using Custom Packages in NixOs Configuration File</title>
    <link href="/posts/2016-03-26-using-custom-packages-in-nixos-configuration-file.html" />
    <id>/posts/2016-03-26-using-custom-packages-in-nixos-configuration-file.html</id>
    <published>2016-03-26T00:00:00Z</published>
    <updated>2016-03-26T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="blog-post">
  <h2 class="blog-post-title">
    Using Custom Packages in NixOs Configuration File
  </h2>
  <p class="blog-post-meta">
    <span class="date">2016-03-26</span> - <span class="tags"><a href="/tags/nix.html">nix</a>, <a href="/tags/nixos.html">nixos</a></span>
  <p>Here is a problem we encountered with NixOS:</p>
<p>The nix-channel we were on didn’t have the latest version of something we needed. This happened recently when my coworker upgraded to Postgres 9.5 from 9.4 but the PostGIS version in nixpkgs hadn’t been updated to a 9.5 compatible version. <!--more--></p>
<h3 id="upgrading-nix-package-postgis">Upgrading Nix Package PostGIS:</h3>
<p><em>same steps apply for any package</em></p>
<ul>
<li>fork nixpkgs in GitHub</li>
<li>updated nix package for PostGIS</li>
<li>built it</li>
<li><a href="https://github.com/NixOS/nixpkgs/pull/13572/commits/c267f5b71122453268d55ef665f20262be7f53d9">submitted as a pull request to nixpkgs</a></li>
</ul>
<h3 id="including-package-in-configuration.nix">Including package in configuration.nix:</h3>
<p>If this package were a stand-alone program, we could have installed it from our forked pkgs. However, this package is referenced in a service in the is configured globally in NixOS so we need to be able to reference our forked package repo in our configuration.nix file. <em>If we were on the unstable channel the package would have eventually shown up, when our pull request was merged in and when the channel is updated from Github. However, we couldn’t wait for that.</em></p>
<h3 id="referencing-our-fork-of-nixpkgs-in-our-configuration.nix">Referencing our fork of nixpkgs in our configuration.nix :</h3>
<p>We created a reference to our forked packages using a let expression in our configuration.nix file. This allowed us to globally reference packages both from the channel we are subscribed and from our custompkgs fork.</p>
<p>Using a let expression, we pulled in our fork of nixpkgs:</p>
<pre class="configuration.nix"><code>{ config, pkgs, ... }:

let custompkgs = import /usr/local/nixpkgs/default.nix {}; in
{
  imports =
    [ # Include the results of the hardware scan.
      ./hardware-configuration.nix
    ];
    ....</code></pre>
<pre class="configuration.nix"><code>...
  services.postgresql = {
        enable = true;
        extraPlugins = [ (custompkgs.postgis.override { postgresql = pkgs.postgresql95; }).v_2_2_1 ];
    };
...</code></pre>

  <div id="disqus_thread"></div>
<script type="text/javascript">
    /* * * CONFIGURATION VARIABLES * * */
    var disqus_shortname = 'cascadeofinsightsadamgbell';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a></noscript>
</div>
]]></summary>
</entry>
<entry>
    <title>Bitcoin Transactions</title>
    <link href="/posts/2015-11-04-bitcoin-transactions-volume.html" />
    <id>/posts/2015-11-04-bitcoin-transactions-volume.html</id>
    <published>2015-11-04T00:00:00Z</published>
    <updated>2015-11-04T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="blog-post">
  <h2 class="blog-post-title">
    Bitcoin Transactions
  </h2>
  <p class="blog-post-meta">
    <span class="date">2015-11-04</span> - <span class="tags"><a href="/tags/prediction.html">prediction</a>, <a href="/tags/good-judgement-project.html">good-judgement-project</a></span>
  <p>What will be the average number of Bitcoin transactions per day in the first week of June 2016?</p>
<!--more-->
<p><a href="https://www.gjopen.com/questions/46-what-will-be-the-average-number-of-bitcoin-transactions-per-day-in-the-first-week-of-june-2016">question</a></p>
<h3 id="simple-estimate-based-on-extrapolation-of-graph">Simple Estimate (based on extrapolation of graph) :</h3>
<ul>
<li>Averaged over 90 days, the transaction volume is climbing consistently. <a href="https://blockchain.info/charts/n-transactions?timespan=all&amp;showDataPoints=false&amp;daysAverageString=90&amp;show_header=true&amp;scale=0&amp;address=">Chart</a></li>
<li>But, it goes sideways or slightly down in periods of up to 6 months long, which could leave it below 125, so I will say 25% chance of below 125.</li>
<li>Going above 250 would represent 100k rise, which hasn’t happen in the past. 25%</li>
<li>The remaining probabilty is 50%.</li>
<li></li>
</ul>
<h3 id="can-we-break-it-down-further">Can we break it down further?</h3>
<ul>
<li>Who is making these transactions? What is causing the increase?</li>
<li><a href="https://tradeblock.com/blog/analysis-of-bitcoin-transaction-size-trends">Some represent a stress test of the network</a></li>
<li><a href="https://blog.coinbase.com/2015/07/15/bitcoin-trends-in-1h-2015/">rest is a wide demographic</a></li>
<li>How many transactions per day can bitcoin handle</li>
<li>Currently 7 transactions per second which is 600K transactions in day, so does not affect prediction</li>
<li></li>
</ul>
<h2 id="other-predictors">Other predictors</h2>
<ul>
<li>other predictors on gjp have a more extreme prediction around 10/75/15</li>
</ul>

  <div id="disqus_thread"></div>
<script type="text/javascript">
    /* * * CONFIGURATION VARIABLES * * */
    var disqus_shortname = 'cascadeofinsightsadamgbell';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a></noscript>
</div>
]]></summary>
</entry>
<entry>
    <title>Fitness Books</title>
    <link href="/posts/2015-10-21-fitness-books.html" />
    <id>/posts/2015-10-21-fitness-books.html</id>
    <published>2015-10-21T00:00:00Z</published>
    <updated>2015-10-21T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="blog-post">
  <h2 class="blog-post-title">
    Fitness Books
  </h2>
  <p class="blog-post-meta">
    <span class="date">2015-10-21</span> - <span class="tags"><a href="/tags/fitness.html">fitness</a></span>
  <p>I’ve read a lot of fitness biographies over the last little while. Here is a quick list.</p>
<!--more-->
<p>Favorite Fitness Type Books:</p>
<ul>
<li>Squat Every Day</li>
<li>Born To Run</li>
<li>Learn To Breathe Fire</li>
</ul>
<p>Biography Type Fitness Books I liked:</p>
<ul>
<li>Embrace The Suck</li>
<li>Finding Ultra</li>
<li>Running with the Kenyans</li>
<li>The Way of the Runner: A Journey into the Fabled World of Japanese Running</li>
<li>Eat And Run</li>
<li>Ultra Marathon Man ( and 50 / 50)</li>
<li>3 Books by Chris Moore</li>
</ul>
<p>Reference:</p>
<ul>
<li>Starting Strength</li>
<li>The first 20 minutes</li>
<li>Which comes first cardio or weights</li>
<li>Strength Training Anatomy</li>
</ul>
<p>Crappy:</p>
<ul>
<li>Body By Science</li>
<li>Unbeatable mind</li>
</ul>
<p>No Category:</p>
<ul>
<li>Running with the mind of meditation</li>
<li>what I talk about when I talk about Running</li>
</ul>
<p>To Read:</p>
<ul>
<li>Running on empty</li>
<li>Natural Born Heroes</li>
<li>Run or Die</li>
<li>First : What it Takes to win</li>
<li>Free+Style</li>
</ul>

  <div id="disqus_thread"></div>
<script type="text/javascript">
    /* * * CONFIGURATION VARIABLES * * */
    var disqus_shortname = 'cascadeofinsightsadamgbell';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a></noscript>
</div>
]]></summary>
</entry>
<entry>
    <title>More Scala Groups And Tuples</title>
    <link href="/posts/2015-08-19-more-scala-groups-and-tuples.html" />
    <id>/posts/2015-08-19-more-scala-groups-and-tuples.html</id>
    <published>2015-08-19T00:00:00Z</published>
    <updated>2015-08-19T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="blog-post">
  <h2 class="blog-post-title">
    More Scala Groups And Tuples
  </h2>
  <p class="blog-post-meta">
    <span class="date">2015-08-19</span> - <span class="tags"><a href="/tags/scala.html">scala</a>, <a href="/tags/slick.html">slick</a>, <a href="/tags/tuples.html">tuples</a></span>
  <p>Continuing from <a href="http://cascadeofinsights.com/posts/2015-08-04-scala-slick-group-joins.html">here</a>, I have lists of tuples and I want to group them. Here I have a list of 4-tuples and I want to group the second tuple by the first. <em>The fact that I need to do this probably represents some greater problem, but that is a story for another time</em></p>
<div class="sourceCode"><pre class="sourceCode scala"><code class="sourceCode scala"><span class="kw">import</span> shapeless.<span class="fu">_</span>
<span class="kw">import</span> syntax.<span class="fu">std</span>.<span class="fu">tuple</span>.<span class="fu">_</span>
<span class="kw">import</span> poly.<span class="fu">_</span>

<span class="kw">object</span> GroupLists {
<span class="kw">def</span> group1TwoExtra[A,B,C,D](t : List[(A,B,C,D)]) : List[(A,List[B],C,D)] = {
      <span class="kw">val</span> map = LinkedHashMap[A, LinkedHashSet[B]]()
      <span class="kw">val</span> mapOther = scala.<span class="fu">collection</span>.<span class="fu">mutable</span>.<span class="fu">Map</span>[A,(C,D)]()
      <span class="kw">for</span> (i &lt;- t) {
        <span class="kw">val</span> key = i.<span class="fu">head</span>
        <span class="fu">map</span>(key) = map.<span class="fu">lift</span>(key).<span class="fu">getOrElse</span>(LinkedHashSet[B]()) + i.<span class="fu">drop</span>(<span class="dv">1</span>).<span class="fu">head</span>
        mapOther += (key -&gt; i.<span class="fu">drop</span>(<span class="dv">2</span>))
      }
      map.<span class="fu">map</span>(b =&gt; (b.<span class="fu">_1</span>, b.<span class="fu">_2</span>.<span class="fu">toList</span>) ++ <span class="fu">mapOther</span>(b.<span class="fu">_1</span>)).<span class="fu">toList</span>
    }</code></pre></div>
<!--more-->
<p>That was easy. The use of head and drop from shapeless lets you act on tuples like they are lists. However abstracting away the size of the tuples gets tricky, because we need type annotations to make the compiler happy.</p>
<p>Here is the same implementation for 5-tuples:</p>
<div class="sourceCode"><pre class="sourceCode scala"><code class="sourceCode scala">
<span class="kw">def</span> group1ThreeExtra[A,B,C,D,E](t : List[(A,B,C,D,E)]) : List[(A,List[B],C,D,E)] = {
      <span class="kw">val</span> map = LinkedHashMap[A, LinkedHashSet[B]]()
      <span class="kw">val</span> mapOther = scala.<span class="fu">collection</span>.<span class="fu">mutable</span>.<span class="fu">Map</span>[A,(C,D,E)]()
      <span class="kw">for</span> (i &lt;- t) {
        <span class="kw">val</span> key = i.<span class="fu">head</span>
        <span class="fu">map</span>(key) = map.<span class="fu">lift</span>(key).<span class="fu">getOrElse</span>(LinkedHashSet[B]()) + i.<span class="fu">drop</span>(<span class="dv">1</span>).<span class="fu">head</span>
        mapOther += (key -&gt; i.<span class="fu">drop</span>(<span class="dv">2</span>))
      }
      map.<span class="fu">map</span>(b =&gt; (b.<span class="fu">_1</span>, b.<span class="fu">_2</span>.<span class="fu">toList</span>) ++ <span class="fu">mapOther</span>(b.<span class="fu">_1</span>)).<span class="fu">toList</span>
    }</code></pre></div>
<p>The interesting thing here is that, except for type annotations, these definitions are exactly the same.</p>
<p>To be continued…</p>

  <div id="disqus_thread"></div>
<script type="text/javascript">
    /* * * CONFIGURATION VARIABLES * * */
    var disqus_shortname = 'cascadeofinsightsadamgbell';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a></noscript>
</div>
]]></summary>
</entry>
<entry>
    <title>Mixed Metaphors</title>
    <link href="/posts/2015-08-11-mixed-metaphors.html" />
    <id>/posts/2015-08-11-mixed-metaphors.html</id>
    <published>2015-08-11T00:00:00Z</published>
    <updated>2015-08-11T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="blog-post">
  <h2 class="blog-post-title">
    Mixed Metaphors
  </h2>
  <p class="blog-post-meta">
    <span class="date">2015-08-11</span> - <span class="tags"><a href="/tags/humor.html">humor</a>, <a href="/tags/presentation.html">presentation</a></span>
  <p>Here I’m collecting some mixed metaphors that I thought were funny. Hopefully for use in a presentation about comedy I am doing</p>
<ul>
<li>I wouldn’t eat that with a ten foot pole <!--more--></li>
<li>She has a heart as big as gold</li>
<li>He’s likes a duck out of water</li>
<li>I’m going to sleep like a baby’s bottom</li>
<li>I have to pee like a gift horse: in the mouth</li>
<li>Six of one man’s garbage is a half dozen of the others</li>
<li>He’s a wolf in cheap clothing</li>
<li>Wake up and smell the coffee on the wall</li>
<li>It’s like shooting fish in a barrel full of monkeys.</li>
<li>He’s got a lot of shoes to fill</li>
<li>Don’t throw stones in a glass bottom boat.</li>
<li>An apple a day doesn’t fall far from the tree.</li>
<li>Looks like the cows have come home to roost.</li>
<li>You can lead a cat to a bag but you can’t make him drink.</li>
<li>Give a man a fish, he’ll eat for a day, give a man a whale, he’ll eat for a month, maybe more.</li>
<li>We’ll burn that bridge when we get to it</li>
<li>He was watching me like I was a hawk.</li>
<li>I’m watching everything you do with a fine-tuned comb.</li>
<li>Button your seat belts</li>
<li>It ain’t rocket surgery</li>
</ul>

  <div id="disqus_thread"></div>
<script type="text/javascript">
    /* * * CONFIGURATION VARIABLES * * */
    var disqus_shortname = 'cascadeofinsightsadamgbell';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a></noscript>
</div>
]]></summary>
</entry>
<entry>
    <title>Scala Slick Group</title>
    <link href="/posts/2015-08-04-scala-slick-group-joins.html" />
    <id>/posts/2015-08-04-scala-slick-group-joins.html</id>
    <published>2015-08-04T00:00:00Z</published>
    <updated>2015-08-04T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="blog-post">
  <h2 class="blog-post-title">
    Scala Slick Group
  </h2>
  <p class="blog-post-meta">
    <span class="date">2015-08-04</span> - <span class="tags"><a href="/tags/scala.html">scala</a>, <a href="/tags/slick.html">slick</a></span>
  <p>In slick, if each foo has many bars and I need to retrive several foos and associtated bars I will do something like this:</p>
<div class="sourceCode"><pre class="sourceCode scala"><code class="sourceCode scala"><span class="kw">val</span> join = <span class="kw">for</span> {
     (f,b) &lt;-
                  foo.<span class="fu">filter</span>(...) on  innerJoin
                  bar <span class="fu">on</span> (...)
   } <span class="kw">yield</span> (o,i,s)</code></pre></div>
<!--more-->
<p>The type of join will be a List[(foo,bar)]. I want the bars grouped by foo, not a tuple of each. I can transform to a grouped format like so:</p>
<div class="sourceCode"><pre class="sourceCode scala"><code class="sourceCode scala"><span class="kw">def</span> group1[A,B](t : List[(A,B)]) : List[(A,List[B])] = {
    <span class="kw">val</span> map = LinkedHashMap[A, LinkedHashSet[B]]()
    <span class="kw">for</span> (i &lt;- t) {
      <span class="kw">val</span> key = i.<span class="fu">_1</span>
      <span class="fu">map</span>(key) = map.<span class="fu">lift</span>(key).<span class="fu">getOrElse</span>(LinkedHashSet[B]()) + i.<span class="fu">_2</span>
    }
    map.<span class="fu">map</span>(b =&gt; (b.<span class="fu">_1</span>,b.<span class="fu">_2</span>.<span class="fu">toList</span>)).<span class="fu">toList</span>
  }</code></pre></div>
<p>This groups one element from a tuple into a sublist. If I later add the requirement that each bar has many baz than I need to another method that transforms tuples of 3 into two nested lists.</p>
<div class="sourceCode"><pre class="sourceCode scala"><code class="sourceCode scala">
<span class="kw">def</span> group2[A,B,C](t : List[(A,B,C)]) : List[(A,List[(B,List[C])])] = {
    <span class="fu">group2Internal</span>(t).<span class="fu">map</span>(x =&gt; (x.<span class="fu">_1</span>,<span class="fu">group1</span>(x.<span class="fu">_2</span>)))
  }

<span class="kw">private</span> <span class="kw">def</span> group2Internal[A,B,C](t : List[(A,B,C)]) : List[(A,List[(B,C)])] = {
   <span class="kw">val</span> map = LinkedHashMap[A, LinkedHashSet[(B,C)]]()
   <span class="kw">for</span> (i &lt;- t) {
     <span class="kw">val</span> key = i.<span class="fu">_1</span>
     <span class="fu">map</span>(key) = map.<span class="fu">lift</span>(key).<span class="fu">getOrElse</span>(LinkedHashSet[(B,C)]()) + ((i.<span class="fu">_2</span>,i.<span class="fu">_3</span>))
   }
   map.<span class="fu">map</span>(b =&gt; (b.<span class="fu">_1</span>,b.<span class="fu">_2</span>.<span class="fu">toList</span>)).<span class="fu">toList</span>
 }</code></pre></div>
<p>I can do the same for grouping into three nested lists:</p>
<div class="sourceCode"><pre class="sourceCode scala"><code class="sourceCode scala"><span class="kw">def</span> group3[A,B,C,D](t : List[(A,B,C,D)]) : List[(A,List[(B,List[(C,List[D])])])] = {
    <span class="fu">group3Internal</span>(t).<span class="fu">map</span>(x =&gt; (x.<span class="fu">_1</span>,<span class="fu">group2</span>(x.<span class="fu">_2</span>)))
}

<span class="kw">private</span> <span class="kw">def</span> group3Internal[A,B,C,D](t : List[(A,B,C,D)]) : List[(A,List[(B,C,D)])] = {
   <span class="kw">val</span> map = LinkedHashMap[A, LinkedHashSet[(B,C,D)]]()
   <span class="kw">for</span> (i &lt;- t) {
     <span class="kw">val</span> key = i.<span class="fu">_1</span>
     <span class="fu">map</span>(key) = map.<span class="fu">lift</span>(key).<span class="fu">getOrElse</span>(LinkedHashSet[(B,C,D)]()) + ((i.<span class="fu">_2</span>,i.<span class="fu">_3</span>,i.<span class="fu">_4</span>))
   }
   map.<span class="fu">map</span>(b =&gt; (b.<span class="fu">_1</span>,b.<span class="fu">_2</span>.<span class="fu">toList</span>)).<span class="fu">toList</span>
 }</code></pre></div>
<p>There is obviously a pattern here that should be abstractable. However, at the type level, tuples of different sizes are unqiue types, so this gets tricky. It should be possible to use the <a href="https://github.com/milessabin/shapeless">shapeless</a> library to abstract over the tuple size. In practice I never need more than group3, so this will stay in its expanded form for now.</p>

  <div id="disqus_thread"></div>
<script type="text/javascript">
    /* * * CONFIGURATION VARIABLES * * */
    var disqus_shortname = 'cascadeofinsightsadamgbell';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a></noscript>
</div>
]]></summary>
</entry>
<entry>
    <title>Hakyll and CircleCi</title>
    <link href="/posts/2015-07-31-hakyll-and-circleci.html" />
    <id>/posts/2015-07-31-hakyll-and-circleci.html</id>
    <published>2015-07-31T00:00:00Z</published>
    <updated>2015-07-31T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="blog-post">
  <h2 class="blog-post-title">
    Hakyll and CircleCi
  </h2>
  <p class="blog-post-meta">
    <span class="date">2015-07-31</span> - <span class="tags"><a href="/tags/blog.html">blog</a>, <a href="/tags/hakyll.html">hakyll</a>, <a href="/tags/ci.html">ci</a>, <a href="/tags/haskell.html">haskell</a></span>
  <p>This blog was on tumblr, which was easy to setup and post and such. However, I spend like 8 hours a day with a text editor open and a git in terminal window. <!--more--> Also I’m always look for an excuse to use haskell. So I’m moving things over to <a href="http://jaspervdj.be/hakyll/">Hakyll</a>. I followed <a href="http://www.stackbuilders.com/news/dr-hakyll-create-a-github-page-with-hakyll-and-circleci">this great tutorial</a> on how to setup things up with CircleCI, so now I just commit and push and my site updates.</p>
<p>So far, so good.</p>

  <div id="disqus_thread"></div>
<script type="text/javascript">
    /* * * CONFIGURATION VARIABLES * * */
    var disqus_shortname = 'cascadeofinsightsadamgbell';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a></noscript>
</div>
]]></summary>
</entry>
<entry>
    <title>Lazy Evaluation In Haskell</title>
    <link href="/posts/2015-01-14-lazy-evaluation.html" />
    <id>/posts/2015-01-14-lazy-evaluation.html</id>
    <published>2015-01-14T00:00:00Z</published>
    <updated>2015-01-14T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="blog-post">
  <h2 class="blog-post-title">
    Lazy Evaluation In Haskell
  </h2>
  <p class="blog-post-meta">
    <span class="date">2015-01-14</span> - <span class="tags"></span>
  <p><em>This post is a work in progress and represents my getting to understand how laziness works in haskell and how it affects performance.</em> <!--more--> Summary of Laziness:</p>
<p>Lazy is good when:</p>
<ul>
<li>You are not going to use all the results</li>
<li>Because you are going to filter some things out at a later stage</li>
</ul>
<p>Strict is good otherwise.<br />
Hence:</p>
<ul>
<li>foldl’ for spine-strict results (Int, Map, …),</li>
<li>foldr for spine-lazy results (mostly just [a]),</li>
<li>Never use foldl</li>
</ul>
<p>The key insight for me has been understanding that lazy evaluation means that functions take in a pointer to a thunk as arguments and then return a thunk as a value. Only looking inside those thunks inputs (via pattern matching or IO) actually forces anything.</p>
<p>This level of indirection improves composability, you can generate than reduce in a more modular fashion with only some constant overhead for holding on to thunks. The paper “why functional programming matters” has a great explanation of this.</p>
<p>This all works because whenever you throw something away with <em>i.e. f (a,</em>) = a, the pointer to the thunk, that was never evaluated, and all the evaluations that follow from can get garbage collected away.</p>
<p>This how foldr can short-circuit on some lazy list, if a condition of f that is passed in doesn’t care about the rest of the list, then we are done.</p>
<p><span>Links:</span></p>
<ul>
<li><a href="http://blog.ezyang.com/category/haskell/haskell-heap/">Ez Yang : how the heap works</a></li>
<li><a href="http://www.haskellforall.com/2014/10/how-to-desugar-haskell-code.html" class="uri">http://www.haskellforall.com/2014/10/how-to-desugar-haskell-code.html</a></li>
<li><a href="http://www.haskell.org/haskellwiki/Performance/Strictness" class="uri">http://www.haskell.org/haskellwiki/Performance/Strictness</a></li>
<li><a href="http://en.wikibooks.org/wiki/Haskell/Laziness" class="uri">http://en.wikibooks.org/wiki/Haskell/Laziness</a></li>
<li><a href="http://en.wikibooks.org/wiki/Haskell/Laziness#Black-box_strictness_analysis" class="uri">http://en.wikibooks.org/wiki/Haskell/Laziness#Black-box_strictness_analysis</a></li>
</ul>

  <div id="disqus_thread"></div>
<script type="text/javascript">
    /* * * CONFIGURATION VARIABLES * * */
    var disqus_shortname = 'cascadeofinsightsadamgbell';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a></noscript>
</div>
]]></summary>
</entry>
<entry>
    <title>Incrementing</title>
    <link href="/posts/2014-03-15-incrementing.html" />
    <id>/posts/2014-03-15-incrementing.html</id>
    <published>2014-03-15T00:00:00Z</published>
    <updated>2014-03-15T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="blog-post">
  <h2 class="blog-post-title">
    Incrementing
  </h2>
  <p class="blog-post-meta">
    <span class="date">2014-03-15</span> - <span class="tags"><a href="/tags/paul-graham.html">paul-graham</a>, <a href="/tags/haskell.html">haskell</a></span>
  <p>In <a href="http://www.paulgraham.com/icad.html">an old essay</a>, Paul Graham, talks about how some languages are more succinct and therefore they are more powerful. In fact, some programming languages can say things that you can’t easily say in others. Maybe you can’t say them at all. Its a good essay overall, you should read it. <!--more--> His Example:</p>
<blockquote>
<p>Write a function that takes a number n, and returns a function that takes another number i and returns n incremented by i.</p>
</blockquote>
<p>I think this example is, maybe, unfairly biased towards functional programming languages, and its no surprise that pg shows us that lisp has the shortest implementation.</p>
<p>It works as a good example, however, because it shows us a concrete demonstration where one language can easily do something (lisp), that others languages are not able to do at all (java).</p>
<p>Let me try this in haskell.</p>
<p>So in Haskell, the type of this function f would be:</p>
<blockquote>
<p>f :: Num a =&gt; a -&gt; ( a -&gt; a)</p>
</blockquote>
<p>meaning f takes a number and returns a function that takes a number and returns another number.</p>
<p>Since the brackets are right associative, we can drop them to get:</p>
<blockquote>
<p>f :: Num a =&gt; a -&gt; a -&gt; a</p>
</blockquote>
<p>This is because, in haskell, all functions are considered curried and can be partially applied. Even basic numerical functions like + - / if given one argument will return a function that excepts the next argument.</p>
<p>For example:</p>
<blockquote>
<blockquote>
<p>:t (+)</p>
</blockquote>
<p>(+) :: Num a =&gt; a -&gt; a -&gt; a</p>
<blockquote>
<p>:t (+) 4<br />
(+) 4 :: Num a =&gt; a -&gt; a</p>
</blockquote>
</blockquote>
<p>So (+) 4 returns a function that takes a number and then adds 4 for to it. (<em>I mean, I guess technically, it doesn’t add 4 to it, but returns a new number that is the sum of them, but I think I am still capturing the spirit of the exercise here. Haskell variables are not mutable.)<br />
</em></p>
<p>What all of this means, if I haven’t already telegraphed the punchline, is that the complete haskell solution is:</p>
<blockquote>
<p>f = (+)</p>
</blockquote>
<p>So, in haskell, we don’t need to write this function. We can just use +.</p>
<p>I think that is pretty cool.</p>

  <div id="disqus_thread"></div>
<script type="text/javascript">
    /* * * CONFIGURATION VARIABLES * * */
    var disqus_shortname = 'cascadeofinsightsadamgbell';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a></noscript>
</div>
]]></summary>
</entry>
<entry>
    <title>How to get bluetooth working in windows 8 / 8.1 on various thinkpads</title>
    <link href="/posts/2014-02-20-bluetooth-thinkpad-w520.html" />
    <id>/posts/2014-02-20-bluetooth-thinkpad-w520.html</id>
    <published>2014-02-20T00:00:00Z</published>
    <updated>2014-02-20T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="blog-post">
  <h2 class="blog-post-title">
    How to get bluetooth working in windows 8 / 8.1 on various thinkpads
  </h2>
  <p class="blog-post-meta">
    <span class="date">2014-02-20</span> - <span class="tags"><a href="/tags/thinkpad.html">thinkpad</a>, <a href="/tags/bluetooth.html">bluetooth</a></span>
  <div class="figure">
<img src="/images/tumblr_n1aynyeIzo1qe4yfuo1_500.jpg" alt="" />

</div>
<blockquote>
<p><strong>How to get bluetooth working in windows 8 / 8.1 on various thinkpads.</strong> <!--more--> Currently, the thinkpads ( w520 for sure, but lots of complaints about others online) do not have working bluetooth drivers. Or rather the driver exists, but getting the bluetooth to turn on is not possible.</p>
</blockquote>
<p>I have put together a solution here:</p>
<p><a href="https://dl.dropboxusercontent.com/u/7773580/lenovo/Adams%20bt%20enable.zip">https://dl.dropboxusercontent.com/u/7773580/lenovo/Adams%20bt%20enable.zip</a></p>
<p>This zip has to batch files that will turn on or off the blue tooth device. It uses the hotkey exe from the windows 7 Lenove hotkey app to force the bluetooth on.</p>
<p>It also contains a bluetooth driver, the one I originally used, however I recommend instead that you go straight to broadcom here:</p>
<p><a href="http://www.broadcom.com/support/bluetooth/update.php" class="uri">http://www.broadcom.com/support/bluetooth/update.php</a></p>

  <div id="disqus_thread"></div>
<script type="text/javascript">
    /* * * CONFIGURATION VARIABLES * * */
    var disqus_shortname = 'cascadeofinsightsadamgbell';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a></noscript>
</div>
]]></summary>
</entry>

</feed>
