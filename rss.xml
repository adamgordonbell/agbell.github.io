<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel>
        <title>Cascade Of Insights</title>
        <link></link>
        <description><![CDATA[Adam Bell's blog]]></description>
        <atom:link href="/rss.xml" rel="self"
                   type="application/rss+xml" />
        <lastBuildDate>Wed, 04 Nov 2015 00:00:00 UT</lastBuildDate>
        <item>
    <title>Bitcoin Transactions</title>
    <link>/posts/2015-11-04-bitcoin-transactions-volume.html</link>
    <description><![CDATA[<div class="blog-post">
  <h2 class="blog-post-title">
    Bitcoin Transactions
  </h2>
  <p class="blog-post-meta">
    <span class="date">2015-11-04</span> - <span class="tags"><a href="/tags/prediction.html">prediction</a>, <a href="/tags/good-judgement-project.html">good-judgement-project</a></span>
  <p>What will be the average number of Bitcoin transactions per day in the first week of June 2016?</p>
<!--more-->
<p><a href="https://www.gjopen.com/questions/46-what-will-be-the-average-number-of-bitcoin-transactions-per-day-in-the-first-week-of-june-2016">question</a></p>
<h3 id="simple-estimate-based-on-extrapolation-of-graph">Simple Estimate (based on extrapolation of graph) :</h3>
<ul>
<li>Averaged over 90 days, the transaction volume is climbing consistently. <a href="https://blockchain.info/charts/n-transactions?timespan=all&amp;showDataPoints=false&amp;daysAverageString=90&amp;show_header=true&amp;scale=0&amp;address=">Chart</a></li>
<li>But, it goes sideways or slightly down in periods of up to 6 months long, which could leave it below 125, so I will say 25% chance of below 125.</li>
<li>Going above 250 would represent 100k rise, which hasn’t happen in the past. 25%</li>
<li>The remaining probabilty is 50%.</li>
<li></li>
</ul>
<h3 id="can-we-break-it-down-further">Can we break it down further?</h3>
<ul>
<li>Who is making these transactions? What is causing the increase?</li>
<li><a href="https://tradeblock.com/blog/analysis-of-bitcoin-transaction-size-trends">Some represent a stress test of the network</a></li>
<li><a href="https://blog.coinbase.com/2015/07/15/bitcoin-trends-in-1h-2015/">rest is a wide demographic</a></li>
<li>How many transactions per day can bitcoin handle</li>
<li>Currently 7 transactions per second which is 600K transactions in day, so does not affect prediction</li>
<li></li>
</ul>
<h2 id="other-predictors">Other predictors</h2>
<ul>
<li>other predictors on gjp have a more extreme prediction around 10/75/15</li>
</ul>

  <div id="disqus_thread"></div>
<script type="text/javascript">
    /* * * CONFIGURATION VARIABLES * * */
    var disqus_shortname = 'cascadeofinsightsadamgbell';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a></noscript>
</div>
]]></description>
    <pubDate>Wed, 04 Nov 2015 00:00:00 UT</pubDate>
    <guid>/posts/2015-11-04-bitcoin-transactions-volume.html</guid>
    <dc:creator>Adam Bell</dc:creator>
</item>
<item>
    <title>Fitness Books</title>
    <link>/posts/2015-10-21-fitness-books.html</link>
    <description><![CDATA[<div class="blog-post">
  <h2 class="blog-post-title">
    Fitness Books
  </h2>
  <p class="blog-post-meta">
    <span class="date">2015-10-21</span> - <span class="tags"><a href="/tags/fitness.html">fitness</a></span>
  <p>I’ve read a lot of fitness biographies over the last little while. Here is a quick list.</p>
<!--more-->
<p>Favorite Fitness Type Books:</p>
<ul>
<li>Squat Every Day</li>
<li>Born To Run</li>
<li>Learn To Breathe Fire</li>
</ul>
<p>Biography Type Fitness Books I liked:</p>
<ul>
<li>Embrace The Suck</li>
<li>Finding Ultra</li>
<li>Running with the Kenyans</li>
<li>The Way of the Runner: A Journey into the Fabled World of Japanese Running</li>
<li>Eat And Run</li>
<li>Ultra Marathon Man ( and 50 / 50)</li>
<li>3 Books by Chris Moore</li>
</ul>
<p>Reference:</p>
<ul>
<li>Starting Strength</li>
<li>The first 20 minutes</li>
<li>Which comes first cardio or weights</li>
<li>Strength Training Anatomy</li>
</ul>
<p>Crappy:</p>
<ul>
<li>Body By Science</li>
<li>Unbeatable mind</li>
</ul>
<p>No Category:</p>
<ul>
<li>Running with the mind of meditation</li>
<li>what I talk about when I talk about Running</li>
</ul>
<p>To Read:</p>
<ul>
<li>Running on empty</li>
<li>Natural Born Heroes</li>
<li>Run or Die</li>
<li>First : What it Takes to win</li>
<li>Free+Style</li>
</ul>

  <div id="disqus_thread"></div>
<script type="text/javascript">
    /* * * CONFIGURATION VARIABLES * * */
    var disqus_shortname = 'cascadeofinsightsadamgbell';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a></noscript>
</div>
]]></description>
    <pubDate>Wed, 21 Oct 2015 00:00:00 UT</pubDate>
    <guid>/posts/2015-10-21-fitness-books.html</guid>
    <dc:creator>Adam Bell</dc:creator>
</item>
<item>
    <title>More Scala Groups And Tuples</title>
    <link>/posts/2015-08-19-more-scala-groups-and-tuples.html</link>
    <description><![CDATA[<div class="blog-post">
  <h2 class="blog-post-title">
    More Scala Groups And Tuples
  </h2>
  <p class="blog-post-meta">
    <span class="date">2015-08-19</span> - <span class="tags"><a href="/tags/scala.html">scala</a>, <a href="/tags/slick.html">slick</a>, <a href="/tags/tuples.html">tuples</a></span>
  <p>Continuing from <a href="http://cascadeofinsights.com/posts/2015-08-04-scala-slick-group-joins.html">here</a>, I have lists of tuples and I want to group them. Here I have a list of 4-tuples and I want to group the second tuple by the first. <em>The fact that I need to do this probably represents some greater problem, but that is a story for another time</em></p>
<div class="sourceCode"><pre class="sourceCode scala"><code class="sourceCode scala"><span class="kw">import</span> shapeless.<span class="fu">_</span>
<span class="kw">import</span> syntax.<span class="fu">std</span>.<span class="fu">tuple</span>.<span class="fu">_</span>
<span class="kw">import</span> poly.<span class="fu">_</span>

<span class="kw">object</span> GroupLists {
<span class="kw">def</span> group1TwoExtra[A,B,C,D](t : List[(A,B,C,D)]) : List[(A,List[B],C,D)] = {
      <span class="kw">val</span> map = LinkedHashMap[A, LinkedHashSet[B]]()
      <span class="kw">val</span> mapOther = scala.<span class="fu">collection</span>.<span class="fu">mutable</span>.<span class="fu">Map</span>[A,(C,D)]()
      <span class="kw">for</span> (i &lt;- t) {
        <span class="kw">val</span> key = i.<span class="fu">head</span>
        <span class="fu">map</span>(key) = map.<span class="fu">lift</span>(key).<span class="fu">getOrElse</span>(LinkedHashSet[B]()) + i.<span class="fu">drop</span>(<span class="dv">1</span>).<span class="fu">head</span>
        mapOther += (key -&gt; i.<span class="fu">drop</span>(<span class="dv">2</span>))
      }
      map.<span class="fu">map</span>(b =&gt; (b.<span class="fu">_1</span>, b.<span class="fu">_2</span>.<span class="fu">toList</span>) ++ <span class="fu">mapOther</span>(b.<span class="fu">_1</span>)).<span class="fu">toList</span>
    }</code></pre></div>
<!--more-->
<p>That was easy. The use of head and drop from shapeless lets you act on tuples like they are lists. However abstracting away the size of the tuples gets tricky, because we need type annotations to make the compiler happy.</p>
<p>Here is the same implementation for 5-tuples:</p>
<div class="sourceCode"><pre class="sourceCode scala"><code class="sourceCode scala">
<span class="kw">def</span> group1ThreeExtra[A,B,C,D,E](t : List[(A,B,C,D,E)]) : List[(A,List[B],C,D,E)] = {
      <span class="kw">val</span> map = LinkedHashMap[A, LinkedHashSet[B]]()
      <span class="kw">val</span> mapOther = scala.<span class="fu">collection</span>.<span class="fu">mutable</span>.<span class="fu">Map</span>[A,(C,D,E)]()
      <span class="kw">for</span> (i &lt;- t) {
        <span class="kw">val</span> key = i.<span class="fu">head</span>
        <span class="fu">map</span>(key) = map.<span class="fu">lift</span>(key).<span class="fu">getOrElse</span>(LinkedHashSet[B]()) + i.<span class="fu">drop</span>(<span class="dv">1</span>).<span class="fu">head</span>
        mapOther += (key -&gt; i.<span class="fu">drop</span>(<span class="dv">2</span>))
      }
      map.<span class="fu">map</span>(b =&gt; (b.<span class="fu">_1</span>, b.<span class="fu">_2</span>.<span class="fu">toList</span>) ++ <span class="fu">mapOther</span>(b.<span class="fu">_1</span>)).<span class="fu">toList</span>
    }</code></pre></div>
<p>The interesting thing here is that, except for type annotations, these definitions are exactly the same.</p>
<p>To be continued…</p>

  <div id="disqus_thread"></div>
<script type="text/javascript">
    /* * * CONFIGURATION VARIABLES * * */
    var disqus_shortname = 'cascadeofinsightsadamgbell';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a></noscript>
</div>
]]></description>
    <pubDate>Wed, 19 Aug 2015 00:00:00 UT</pubDate>
    <guid>/posts/2015-08-19-more-scala-groups-and-tuples.html</guid>
    <dc:creator>Adam Bell</dc:creator>
</item>
<item>
    <title>Mixed Metaphors</title>
    <link>/posts/2015-08-11-mixed-metaphors.html</link>
    <description><![CDATA[<div class="blog-post">
  <h2 class="blog-post-title">
    Mixed Metaphors
  </h2>
  <p class="blog-post-meta">
    <span class="date">2015-08-11</span> - <span class="tags"><a href="/tags/humor.html">humor</a>, <a href="/tags/presentation.html">presentation</a></span>
  <p>Here I’m collecting some mixed metaphors that I thought were funny. Hopefully for use in a presentation about comedy I am doing</p>
<ul>
<li>I wouldn’t eat that with a ten foot pole <!--more--></li>
<li>She has a heart as big as gold</li>
<li>He’s likes a duck out of water</li>
<li>I’m going to sleep like a baby’s bottom</li>
<li>I have to pee like a gift horse: in the mouth</li>
<li>Six of one man’s garbage is a half dozen of the others</li>
<li>He’s a wolf in cheap clothing</li>
<li>Wake up and smell the coffee on the wall</li>
<li>It’s like shooting fish in a barrel full of monkeys.</li>
<li>He’s got a lot of shoes to fill</li>
<li>Don’t throw stones in a glass bottom boat.</li>
<li>An apple a day doesn’t fall far from the tree.</li>
<li>Looks like the cows have come home to roost.</li>
<li>You can lead a cat to a bag but you can’t make him drink.</li>
<li>Give a man a fish, he’ll eat for a day, give a man a whale, he’ll eat for a month, maybe more.</li>
<li>We’ll burn that bridge when we get to it</li>
<li>He was watching me like I was a hawk.</li>
<li>I’m watching everything you do with a fine-tuned comb.</li>
<li>Button your seat belts</li>
<li>It ain’t rocket surgery</li>
</ul>

  <div id="disqus_thread"></div>
<script type="text/javascript">
    /* * * CONFIGURATION VARIABLES * * */
    var disqus_shortname = 'cascadeofinsightsadamgbell';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a></noscript>
</div>
]]></description>
    <pubDate>Tue, 11 Aug 2015 00:00:00 UT</pubDate>
    <guid>/posts/2015-08-11-mixed-metaphors.html</guid>
    <dc:creator>Adam Bell</dc:creator>
</item>
<item>
    <title>Scala Slick Group</title>
    <link>/posts/2015-08-04-scala-slick-group-joins.html</link>
    <description><![CDATA[<div class="blog-post">
  <h2 class="blog-post-title">
    Scala Slick Group
  </h2>
  <p class="blog-post-meta">
    <span class="date">2015-08-04</span> - <span class="tags"><a href="/tags/scala.html">scala</a>, <a href="/tags/slick.html">slick</a></span>
  <p>In slick, if each foo has many bars and I need to retrive several foos and associtated bars I will do something like this:</p>
<div class="sourceCode"><pre class="sourceCode scala"><code class="sourceCode scala"><span class="kw">val</span> join = <span class="kw">for</span> {
     (f,b) &lt;-
                  foo.<span class="fu">filter</span>(...) on  innerJoin
                  bar <span class="fu">on</span> (...)
   } <span class="kw">yield</span> (o,i,s)</code></pre></div>
<!--more-->
<p>The type of join will be a List[(foo,bar)]. I want the bars grouped by foo, not a tuple of each. I can transform to a grouped format like so:</p>
<div class="sourceCode"><pre class="sourceCode scala"><code class="sourceCode scala"><span class="kw">def</span> group1[A,B](t : List[(A,B)]) : List[(A,List[B])] = {
    <span class="kw">val</span> map = LinkedHashMap[A, LinkedHashSet[B]]()
    <span class="kw">for</span> (i &lt;- t) {
      <span class="kw">val</span> key = i.<span class="fu">_1</span>
      <span class="fu">map</span>(key) = map.<span class="fu">lift</span>(key).<span class="fu">getOrElse</span>(LinkedHashSet[B]()) + i.<span class="fu">_2</span>
    }
    map.<span class="fu">map</span>(b =&gt; (b.<span class="fu">_1</span>,b.<span class="fu">_2</span>.<span class="fu">toList</span>)).<span class="fu">toList</span>
  }</code></pre></div>
<p>This groups one element from a tuple into a sublist. If I later add the requirement that each bar has many baz than I need to another method that transforms tuples of 3 into two nested lists.</p>
<div class="sourceCode"><pre class="sourceCode scala"><code class="sourceCode scala">
<span class="kw">def</span> group2[A,B,C](t : List[(A,B,C)]) : List[(A,List[(B,List[C])])] = {
    <span class="fu">group2Internal</span>(t).<span class="fu">map</span>(x =&gt; (x.<span class="fu">_1</span>,<span class="fu">group1</span>(x.<span class="fu">_2</span>)))
  }

<span class="kw">private</span> <span class="kw">def</span> group2Internal[A,B,C](t : List[(A,B,C)]) : List[(A,List[(B,C)])] = {
   <span class="kw">val</span> map = LinkedHashMap[A, LinkedHashSet[(B,C)]]()
   <span class="kw">for</span> (i &lt;- t) {
     <span class="kw">val</span> key = i.<span class="fu">_1</span>
     <span class="fu">map</span>(key) = map.<span class="fu">lift</span>(key).<span class="fu">getOrElse</span>(LinkedHashSet[(B,C)]()) + ((i.<span class="fu">_2</span>,i.<span class="fu">_3</span>))
   }
   map.<span class="fu">map</span>(b =&gt; (b.<span class="fu">_1</span>,b.<span class="fu">_2</span>.<span class="fu">toList</span>)).<span class="fu">toList</span>
 }</code></pre></div>
<p>I can do the same for grouping into three nested lists:</p>
<div class="sourceCode"><pre class="sourceCode scala"><code class="sourceCode scala"><span class="kw">def</span> group3[A,B,C,D](t : List[(A,B,C,D)]) : List[(A,List[(B,List[(C,List[D])])])] = {
    <span class="fu">group3Internal</span>(t).<span class="fu">map</span>(x =&gt; (x.<span class="fu">_1</span>,<span class="fu">group2</span>(x.<span class="fu">_2</span>)))
}

<span class="kw">private</span> <span class="kw">def</span> group3Internal[A,B,C,D](t : List[(A,B,C,D)]) : List[(A,List[(B,C,D)])] = {
   <span class="kw">val</span> map = LinkedHashMap[A, LinkedHashSet[(B,C,D)]]()
   <span class="kw">for</span> (i &lt;- t) {
     <span class="kw">val</span> key = i.<span class="fu">_1</span>
     <span class="fu">map</span>(key) = map.<span class="fu">lift</span>(key).<span class="fu">getOrElse</span>(LinkedHashSet[(B,C,D)]()) + ((i.<span class="fu">_2</span>,i.<span class="fu">_3</span>,i.<span class="fu">_4</span>))
   }
   map.<span class="fu">map</span>(b =&gt; (b.<span class="fu">_1</span>,b.<span class="fu">_2</span>.<span class="fu">toList</span>)).<span class="fu">toList</span>
 }</code></pre></div>
<p>There is obviously a pattern here that should be abstractable. However, at the type level, tuples of different sizes are unqiue types, so this gets tricky. It should be possible to use the <a href="https://github.com/milessabin/shapeless">shapeless</a> library to abstract over the tuple size. In practice I never need more than group3, so this will stay in its expanded form for now.</p>

  <div id="disqus_thread"></div>
<script type="text/javascript">
    /* * * CONFIGURATION VARIABLES * * */
    var disqus_shortname = 'cascadeofinsightsadamgbell';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a></noscript>
</div>
]]></description>
    <pubDate>Tue, 04 Aug 2015 00:00:00 UT</pubDate>
    <guid>/posts/2015-08-04-scala-slick-group-joins.html</guid>
    <dc:creator>Adam Bell</dc:creator>
</item>
<item>
    <title>Hakyll and CircleCi</title>
    <link>/posts/2015-07-31-hakyll-and-circleci.html</link>
    <description><![CDATA[<div class="blog-post">
  <h2 class="blog-post-title">
    Hakyll and CircleCi
  </h2>
  <p class="blog-post-meta">
    <span class="date">2015-07-31</span> - <span class="tags"><a href="/tags/blog.html">blog</a>, <a href="/tags/hakyll.html">hakyll</a>, <a href="/tags/ci.html">ci</a>, <a href="/tags/haskell.html">haskell</a></span>
  <p>This blog was on tumblr, which was easy to setup and post and such. However, I spend like 8 hours a day with a text editor open and a git in terminal window. <!--more--> Also I’m always look for an excuse to use haskell. So I’m moving things over to <a href="http://jaspervdj.be/hakyll/">Hakyll</a>. I followed <a href="http://www.stackbuilders.com/news/dr-hakyll-create-a-github-page-with-hakyll-and-circleci">this great tutorial</a> on how to setup things up with CircleCI, so now I just commit and push and my site updates.</p>
<p>So far, so good.</p>

  <div id="disqus_thread"></div>
<script type="text/javascript">
    /* * * CONFIGURATION VARIABLES * * */
    var disqus_shortname = 'cascadeofinsightsadamgbell';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a></noscript>
</div>
]]></description>
    <pubDate>Fri, 31 Jul 2015 00:00:00 UT</pubDate>
    <guid>/posts/2015-07-31-hakyll-and-circleci.html</guid>
    <dc:creator>Adam Bell</dc:creator>
</item>
<item>
    <title>Lazy Evaluation In Haskell</title>
    <link>/posts/2015-01-14-lazy-evaluation.html</link>
    <description><![CDATA[<div class="blog-post">
  <h2 class="blog-post-title">
    Lazy Evaluation In Haskell
  </h2>
  <p class="blog-post-meta">
    <span class="date">2015-01-14</span> - <span class="tags"></span>
  <p><em>This post is a work in progress and represents my getting to understand how laziness works in haskell and how it affects performance.</em> <!--more--> Summary of Laziness:</p>
<p>Lazy is good when:</p>
<ul>
<li>You are not going to use all the results</li>
<li>Because you are going to filter some things out at a later stage</li>
</ul>
<p>Strict is good otherwise.<br />
Hence:</p>
<ul>
<li>foldl’ for spine-strict results (Int, Map, …),</li>
<li>foldr for spine-lazy results (mostly just [a]),</li>
<li>Never use foldl</li>
</ul>
<p>The key insight for me has been understanding that lazy evaluation means that functions take in a pointer to a thunk as arguments and then return a thunk as a value. Only looking inside those thunks inputs (via pattern matching or IO) actually forces anything.</p>
<p>This level of indirection improves composability, you can generate than reduce in a more modular fashion with only some constant overhead for holding on to thunks. The paper “why functional programming matters” has a great explanation of this.</p>
<p>This all works because whenever you throw something away with <em>i.e. f (a,</em>) = a, the pointer to the thunk, that was never evaluated, and all the evaluations that follow from can get garbage collected away.</p>
<p>This how foldr can short-circuit on some lazy list, if a condition of f that is passed in doesn’t care about the rest of the list, then we are done.</p>
<p><span>Links:</span></p>
<ul>
<li><a href="http://blog.ezyang.com/category/haskell/haskell-heap/">Ez Yang : how the heap works</a></li>
<li><a href="http://www.haskellforall.com/2014/10/how-to-desugar-haskell-code.html" class="uri">http://www.haskellforall.com/2014/10/how-to-desugar-haskell-code.html</a></li>
<li><a href="http://www.haskell.org/haskellwiki/Performance/Strictness" class="uri">http://www.haskell.org/haskellwiki/Performance/Strictness</a></li>
<li><a href="http://en.wikibooks.org/wiki/Haskell/Laziness" class="uri">http://en.wikibooks.org/wiki/Haskell/Laziness</a></li>
<li><a href="http://en.wikibooks.org/wiki/Haskell/Laziness#Black-box_strictness_analysis" class="uri">http://en.wikibooks.org/wiki/Haskell/Laziness#Black-box_strictness_analysis</a></li>
</ul>

  <div id="disqus_thread"></div>
<script type="text/javascript">
    /* * * CONFIGURATION VARIABLES * * */
    var disqus_shortname = 'cascadeofinsightsadamgbell';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a></noscript>
</div>
]]></description>
    <pubDate>Wed, 14 Jan 2015 00:00:00 UT</pubDate>
    <guid>/posts/2015-01-14-lazy-evaluation.html</guid>
    <dc:creator>Adam Bell</dc:creator>
</item>
<item>
    <title>Incrementing</title>
    <link>/posts/2014-03-15-incrementing.html</link>
    <description><![CDATA[<div class="blog-post">
  <h2 class="blog-post-title">
    Incrementing
  </h2>
  <p class="blog-post-meta">
    <span class="date">2014-03-15</span> - <span class="tags"><a href="/tags/paul-graham.html">paul-graham</a>, <a href="/tags/haskell.html">haskell</a></span>
  <p>In <a href="http://www.paulgraham.com/icad.html">an old essay</a>, Paul Graham, talks about how some languages are more succinct and therefore they are more powerful. In fact, some programming languages can say things that you can’t easily say in others. Maybe you can’t say them at all. Its a good essay overall, you should read it. <!--more--> His Example:</p>
<blockquote>
<p>Write a function that takes a number n, and returns a function that takes another number i and returns n incremented by i.</p>
</blockquote>
<p>I think this example is, maybe, unfairly biased towards functional programming languages, and its no surprise that pg shows us that lisp has the shortest implementation.</p>
<p>It works as a good example, however, because it shows us a concrete demonstration where one language can easily do something (lisp), that others languages are not able to do at all (java).</p>
<p>Let me try this in haskell.</p>
<p>So in Haskell, the type of this function f would be:</p>
<blockquote>
<p>f :: Num a =&gt; a -&gt; ( a -&gt; a)</p>
</blockquote>
<p>meaning f takes a number and returns a function that takes a number and returns another number.</p>
<p>Since the brackets are right associative, we can drop them to get:</p>
<blockquote>
<p>f :: Num a =&gt; a -&gt; a -&gt; a</p>
</blockquote>
<p>This is because, in haskell, all functions are considered curried and can be partially applied. Even basic numerical functions like + - / if given one argument will return a function that excepts the next argument.</p>
<p>For example:</p>
<blockquote>
<blockquote>
<p>:t (+)</p>
</blockquote>
<p>(+) :: Num a =&gt; a -&gt; a -&gt; a</p>
<blockquote>
<p>:t (+) 4<br />
(+) 4 :: Num a =&gt; a -&gt; a</p>
</blockquote>
</blockquote>
<p>So (+) 4 returns a function that takes a number and then adds 4 for to it. (<em>I mean, I guess technically, it doesn’t add 4 to it, but returns a new number that is the sum of them, but I think I am still capturing the spirit of the exercise here. Haskell variables are not mutable.)<br />
</em></p>
<p>What all of this means, if I haven’t already telegraphed the punchline, is that the complete haskell solution is:</p>
<blockquote>
<p>f = (+)</p>
</blockquote>
<p>So, in haskell, we don’t need to write this function. We can just use +.</p>
<p>I think that is pretty cool.</p>

  <div id="disqus_thread"></div>
<script type="text/javascript">
    /* * * CONFIGURATION VARIABLES * * */
    var disqus_shortname = 'cascadeofinsightsadamgbell';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a></noscript>
</div>
]]></description>
    <pubDate>Sat, 15 Mar 2014 00:00:00 UT</pubDate>
    <guid>/posts/2014-03-15-incrementing.html</guid>
    <dc:creator>Adam Bell</dc:creator>
</item>
<item>
    <title>How to get bluetooth working in windows 8 / 8.1 on various thinkpads</title>
    <link>/posts/2014-02-20-bluetooth-thinkpad-w520.html</link>
    <description><![CDATA[<div class="blog-post">
  <h2 class="blog-post-title">
    How to get bluetooth working in windows 8 / 8.1 on various thinkpads
  </h2>
  <p class="blog-post-meta">
    <span class="date">2014-02-20</span> - <span class="tags"><a href="/tags/thinkpad.html">thinkpad</a>, <a href="/tags/bluetooth.html">bluetooth</a></span>
  <div class="figure">
<img src="/images/tumblr_n1aynyeIzo1qe4yfuo1_500.jpg" alt="" />

</div>
<blockquote>
<p><strong>How to get bluetooth working in windows 8 / 8.1 on various thinkpads.</strong> <!--more--> Currently, the thinkpads ( w520 for sure, but lots of complaints about others online) do not have working bluetooth drivers. Or rather the driver exists, but getting the bluetooth to turn on is not possible.</p>
</blockquote>
<p>I have put together a solution here:</p>
<p><a href="https://dl.dropboxusercontent.com/u/7773580/lenovo/Adams%20bt%20enable.zip">https://dl.dropboxusercontent.com/u/7773580/lenovo/Adams%20bt%20enable.zip</a></p>
<p>This zip has to batch files that will turn on or off the blue tooth device. It uses the hotkey exe from the windows 7 Lenove hotkey app to force the bluetooth on.</p>
<p>It also contains a bluetooth driver, the one I originally used, however I recommend instead that you go straight to broadcom here:</p>
<p><a href="http://www.broadcom.com/support/bluetooth/update.php" class="uri">http://www.broadcom.com/support/bluetooth/update.php</a></p>

  <div id="disqus_thread"></div>
<script type="text/javascript">
    /* * * CONFIGURATION VARIABLES * * */
    var disqus_shortname = 'cascadeofinsightsadamgbell';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a></noscript>
</div>
]]></description>
    <pubDate>Thu, 20 Feb 2014 00:00:00 UT</pubDate>
    <guid>/posts/2014-02-20-bluetooth-thinkpad-w520.html</guid>
    <dc:creator>Adam Bell</dc:creator>
</item>
<item>
    <title>Truly Ergonomic Keyboard</title>
    <link>/posts/2013-11-28-truly-ergonomic-keyboard.html</link>
    <description><![CDATA[<div class="blog-post">
  <h2 class="blog-post-title">
    Truly Ergonomic Keyboard
  </h2>
  <p class="blog-post-meta">
    <span class="date">2013-11-28</span> - <span class="tags"><a href="/tags/keyboard.html">keyboard</a></span>
  <p><img src="http://40.media.tumblr.com/33a4ee15af3bce76dafa18a526b9d383/tumblr_mwz6ecK0jE1qe4yfuo1_500.jpg" alt="" /><br />
<!--more--> <img src="http://41.media.tumblr.com/646b8559a7ae8978dacd30c70fc527cc/tumblr_mwz6ecK0jE1qe4yfuo2_500.jpg" alt="" /></p>
<blockquote>
<p><strong>I got my new teck keyboard from massdrop. It takes some getting used to, but I’m already typing faster. <a href="https://github.com/agbell/TECK">Check out the autohotkey script I used to ease the transition.</a></strong></p>
</blockquote>
<div id="text-1" class="outline-text-2">
<p>In my effort to become a better touch typer, I began looking into ergnomic and mechanical keyboards. The cream of the crop for ergonomic symetric mechanical keyboards appears to be the <a href="http://ergodox.org/">ergodox</a>. It is open source hardware, so you basically have to order the parts your self and get out your soldering gun. They sell these in kit form all the time on massdrop, but this seemed like a little more effort than I wanted to put into a keyboard at this juncture, so when <a href="http://massdrop.com">massdrop</a> did a mass buy for the so call <a href="https://www.trulyergonomic.com/store/index.php">Truly Ergonomic Keyboard</a>, which is a compromise between a traditional keyboard and ergodox, I jumped on it and got my TECK as 25% off.</p>
<p>Keyboard arrived very quickly from massdrop and I’ve been using it full time for about a month now. I made some modifications to the keymapping using the the included software, switching the control and shift keys to more traditional spots. I also used AutoHotkey on windows and xcape on Ubuntu to get my right control to work as an enter key if pressed alone and some other similar tweaks.</p>
</div>
<h3 id="notes-from-first-week-of-use."><span class="section-number-3"></span>Notes from first week of use.</h3>
<div id="outline-container-1-1-1" class="outline-4">
<ul>
<li><h4 id="having-the-shift-keys-on-home-row-is-very-smart">Having the shift keys on home row is very smart</h4></li>
</ul>
<blockquote>
<div id="text-1-1-1" class="outline-text-4">
but i want to be backward compatible with traditional keyboards so switched it back
</div>
</blockquote>
</div>
<div id="outline-container-1-1-2" class="outline-4">
<ul>
<li><h4 id="enter-is-middle-is-great"><span class="section-number-4"></span>enter is middle is great</h4></li>
</ul>
</div>
<div id="outline-container-1-1-3" class="outline-4">
<ul>
<li><h4 id="delete-and-backspace-take-getting-used-to"><span class="section-number-4"></span>delete and backspace take getting used to</h4></li>
</ul>
</div>
<div id="outline-container-1-1-4" class="outline-4">
<ul>
<li><h4 id="quotes-key-in-new-place-is-great-for-typing-text-but-not-good-with-vim-and-the-shell"><span class="section-number-4"></span>quotes key in new place is great for typing text, but not good with VIM and the shell</h4></li>
</ul>
</div>
<h2 id="backwards-compatible-tweaks">Backwards compatible tweaks</h2>
<p>I want to be able to use normal keyboards when I have to, so I made some tweaks to the TECK keyboard to keep it close to default layout.</p>
<ul>
<li><p>switched key caps - CTRL and SHIFT</p></li>
<li><p>right control is enter if pressed alone</p></li>
<li><p>left control is ESC alone (vimness) means my control is like my old caps lock</p></li>
<li><p>tried mapping shift on its own to tab, but messed up my shift tabbing</p></li>
</ul>
<p><strong>References:</strong></p>
<ul>
<li><a href="https://github.com/agbell/TECK">My Autohotkey scripts for the TECK</a></li>
<li><a href="https://www.trulyergonomic.com/store/index.php">TECK website</a></li>
<li><a href="http://ergodox.org/">ErgoDox</a></li>
</ul>

  <div id="disqus_thread"></div>
<script type="text/javascript">
    /* * * CONFIGURATION VARIABLES * * */
    var disqus_shortname = 'cascadeofinsightsadamgbell';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a></noscript>
</div>
]]></description>
    <pubDate>Thu, 28 Nov 2013 00:00:00 UT</pubDate>
    <guid>/posts/2013-11-28-truly-ergonomic-keyboard.html</guid>
    <dc:creator>Adam Bell</dc:creator>
</item>

    </channel>
</rss>
